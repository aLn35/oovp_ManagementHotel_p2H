/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package finalproject;

import java.sql.*;
import java.util.Date;
import java.util.concurrent.TimeUnit;
import javax.swing.*;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfWriter;
import com.itextpdf.text.pdf.*;
import java.io.FileOutputStream;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.awt.Desktop;
import java.io.File;
import com.itextpdf.text.Font;
import com.itextpdf.text.FontFactory;
import com.itextpdf.text.Element;
import java.text.DecimalFormat;
import java.text.DecimalFormatSymbols;
import java.text.NumberFormat;
import java.util.Locale;
import com.itextpdf.text.BaseColor;


/**
 *
 * @author Anjelin Ligiana Nainggolan
 */
public class Checkout extends javax.swing.JFrame {
    Connection conn;
    PreparedStatement pat;
    ResultSet rs;
    /**
     * Creates new form Checkout
     */

    public Checkout() {
        initComponents();
        connect();
        setupListeners();
    }

    private void connect() {
        try {
            Class.forName("com.mysql.jdbc.Driver");
            conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/p2h_oovp", "root", "");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Connection Failed: " + e.getMessage());
            System.exit(0);
        }
    }
    
    // Contoh fungsi untuk format harga sesuai keinginan:
    public static String formatPrice(double price) {
        if (price >= 1_000_000_000) { // miliaran, tampilkan tanpa nol (misal 1.2M)
            return String.format("Rp %,d", (long)price).replace(",", ".");
        } else {
            // format dengan semua nol (misal 1.000.000)
            return String.format("Rp %,d,-", (long)price).replace(",", ".");
        }
    }

    
    PreparedStatement pst;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked") //can't MOdify
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtRoomNumber = new javax.swing.JTextField();
        txtName = new javax.swing.JTextField();
        txtPrice = new javax.swing.JTextField();
        txtPhone = new javax.swing.JTextField();
        txtEmail = new javax.swing.JTextField();
        txtCheckin = new javax.swing.JTextField();
        txtNIK = new javax.swing.JTextField();
        txtTotalPrice = new javax.swing.JTextField();
        txtCheckout = new javax.swing.JTextField();
        Search = new javax.swing.JButton();
        Checkout = new javax.swing.JButton();
        clearForm = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtRoomType = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtBed = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        Back = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        txtPaymentMethod = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(102, 255, 153));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        getContentPane().add(txtRoomNumber, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 140, 550, 30));

        txtName.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        getContentPane().add(txtName, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 220, 209, -1));

        txtPrice.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        getContentPane().add(txtPrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 340, 210, -1));

        txtPhone.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        getContentPane().add(txtPhone, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 340, 209, -1));

        txtEmail.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        getContentPane().add(txtEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 400, 209, -1));

        txtCheckin.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        getContentPane().add(txtCheckin, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 220, 209, -1));

        txtNIK.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        getContentPane().add(txtNIK, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 280, 209, -1));

        txtTotalPrice.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        txtTotalPrice.setForeground(new java.awt.Color(255, 0, 0));
        getContentPane().add(txtTotalPrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 400, 460, 30));

        txtCheckout.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        getContentPane().add(txtCheckout, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 220, 209, -1));

        Search.setBackground(new java.awt.Color(0, 153, 153));
        Search.setForeground(new java.awt.Color(255, 255, 153));
        Search.setText("Search Room Number");
        getContentPane().add(Search, new org.netbeans.lib.awtextra.AbsoluteConstraints(870, 140, -1, 30));

        Checkout.setBackground(new java.awt.Color(102, 204, 255));
        Checkout.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        Checkout.setIcon(new javax.swing.ImageIcon(getClass().getResource("/finalproject/p2h_attribute/bill.png"))); // NOI18N
        Checkout.setText("Checkout and Print Receipt");
        Checkout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CheckoutActionPerformed(evt);
            }
        });
        getContentPane().add(Checkout, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 500, 290, 50));

        clearForm.setBackground(new java.awt.Color(255, 255, 204));
        clearForm.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        clearForm.setText("Clear");
        clearForm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearFormActionPerformed(evt);
            }
        });
        getContentPane().add(clearForm, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 460, -1, 30));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setText("Name");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 200, -1, -1));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setText("Check In Date");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 200, -1, -1));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/finalproject/p2h_attribute/CheckOut.png"))); // NOI18N
        jLabel3.setText("CHECKOUT HOTEL");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 40, 270, -1));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setText("Price Per Day");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 320, 90, -1));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel5.setText("NIK");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 260, -1, -1));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel6.setText("Total Amount");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 380, -1, -1));

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel7.setText("Mobile Phone");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 320, -1, -1));

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel8.setText("Email");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 380, -1, -1));

        txtRoomType.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        getContentPane().add(txtRoomType, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 280, 209, -1));

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel9.setText("Room Type");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 260, -1, -1));

        txtBed.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        getContentPane().add(txtBed, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 280, 209, -1));

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel10.setText("Bed Type");
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 260, -1, -1));

        Back.setBackground(new java.awt.Color(255, 204, 204));
        Back.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        Back.setText("Back to Dashboard");
        Back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackActionPerformed(evt);
            }
        });
        getContentPane().add(Back, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 460, 180, 30));

        jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel11.setText("Checkout Date");
        getContentPane().add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 200, -1, -1));

        txtPaymentMethod.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtPaymentMethod.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPaymentMethodActionPerformed(evt);
            }
        });
        getContentPane().add(txtPaymentMethod, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 340, 210, -1));

        jLabel12.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel12.setText("Peyment Method");
        getContentPane().add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 320, 140, -1));

        jButton1.setBackground(new java.awt.Color(204, 255, 204));
        jButton1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButton1.setForeground(new java.awt.Color(0, 153, 102));
        jButton1.setText("<");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(970, 460, -1, 30));

        jLabel13.setFont(new java.awt.Font("Segoe UI", 3, 13)); // NOI18N
        jLabel13.setText("@anjelin.ln");
        getContentPane().add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 580, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackActionPerformed
            new Dashboard().setVisible(true);     // TODO add your handling code here:
    }//GEN-LAST:event_BackActionPerformed

    private void clearFormActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearFormActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_clearFormActionPerformed

    private void CheckoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CheckoutActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CheckoutActionPerformed

    private void txtPaymentMethodActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPaymentMethodActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPaymentMethodActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        new BookingRoom().setVisible(true);         
    }//GEN-LAST:event_jButton1ActionPerformed

    private void searchByRoomNumber(String roomNumber) {
    String sql = "SELECT c.name, c.nik, c.phone, c.email, " +
                 "r.number, r.type, r.bed, r.price, " +
                 "b.checkin_date, b.checkout_date, b.base_room_price, " +
                 "p.payment_date, p.payment_method " +
                 "FROM bookings b " +
                 "JOIN customers c ON b.customer_id = c.id " +
                 "JOIN rooms r ON b.room_id = r.id " +
                 "LEFT JOIN payments p ON b.id = p.booking_id " +  // ← gunakan LEFT JOIN untuk jaga-jaga data payment belum ada
                 "WHERE r.number = ? " +
                 "ORDER BY b.id DESC LIMIT 1";

    try {
        pst = conn.prepareStatement(sql);
        pst.setString(1, roomNumber);
        rs = pst.executeQuery();

        if (rs.next()) {
            txtName.setText(rs.getString("name"));
            txtNIK.setText(rs.getString("nik"));
            txtPhone.setText(rs.getString("phone"));
            txtEmail.setText(rs.getString("email"));
            txtRoomNumber.setText(rs.getString("number"));
            txtRoomType.setText(rs.getString("type"));
            txtBed.setText(rs.getString("bed"));
            DecimalFormat formatter = (DecimalFormat) NumberFormat.getInstance(new Locale("id", "ID"));
            formatter.applyPattern("#,###");
            String formattedRoomPrice = "Rp. " + formatter.format(rs.getDouble("price")) + ",-";
            txtPrice.setText(formattedRoomPrice);
            txtPaymentMethod.setText(rs.getString("payment_method"));
            txtCheckin.setText(rs.getString("checkin_date"));
            txtCheckout.setText(rs.getString("checkout_date"));
            String formattedTotalPrice = "Rp. " + formatter.format(rs.getDouble("base_room_price")) + ",-";
            txtTotalPrice.setText(formattedTotalPrice);
        } else {
            JOptionPane.showMessageDialog(this, "Data tidak ditemukan untuk kamar: " + roomNumber);
        }

    } catch (Exception e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
    }
}

    private void clearForm() {
    txtRoomNumber.setText("");
    txtName.setText("");
    txtEmail.setText("");
    txtPhone.setText("");
    txtCheckin.setText("");
    txtCheckout.setText("");
    txtPrice.setText("");
    txtPaymentMethod.setText("");
    txtTotalPrice.setText("");
    txtNIK.setText("");
    txtRoomType.setText("");
    txtBed.setText("");
}

     private void setupListeners() {
        Search.addActionListener(e -> {
            String roomNumber = txtRoomNumber.getText();
            if (!roomNumber.isEmpty()) {
                searchByRoomNumber(roomNumber);
            } else {
                JOptionPane.showMessageDialog(this, "Masukkan nomor kamar terlebih dahulu.");
            }
        });

        clearForm.addActionListener(e -> clearForm());

        Checkout.addActionListener(e -> checkoutCustomer());
    }
    
    private void checkoutCustomer() {
    String roomNumber = txtRoomNumber.getText();

    try {
        // 1. Ubah status kamar jadi "available"
        String updateBooking = "UPDATE bookings SET checkout_date = ? " +
                       "WHERE room_id = (SELECT id FROM rooms WHERE number = ?)";

        pat = conn.prepareStatement(updateBooking);
        pat.setString(1, txtCheckout.getText());  // Tanggal checkout dari form
        pat.setString(2, roomNumber);
        pat.executeUpdate();

        // 2. Update availability di tabel rooms
        String updateRoom = "UPDATE rooms SET availability = 'available' WHERE number = ?";
        pat = conn.prepareStatement(updateRoom);
        pat.setString(1, roomNumber);
        pat.executeUpdate();

        JOptionPane.showMessageDialog(this, "Check-out berhasil!");

        // 3. Tawarkan buat PDF
        int confirm = JOptionPane.showConfirmDialog(this, "Ingin mencetak Bill PDF?", "Cetak?", JOptionPane.YES_NO_OPTION);
        if (confirm == JOptionPane.YES_OPTION) {
            generatePDFBill();  // Fungsi yang sudah kamu siapkan sebelumnya
        }

        // 4. Bersihkan form
        clearForm();

    } catch (SQLException e) {
        JOptionPane.showMessageDialog(this, "Gagal checkout: " + e.getMessage());
    }
}

    private void generatePDFBill() {
    try {
        String roomNumber = txtRoomNumber.getText();
        File tempFile = File.createTempFile("Bill_" + roomNumber + "_", ".pdf");
        tempFile.deleteOnExit();

        // Query ambil data terakhir booking dari kamar tersebut
        String sql = "SELECT c.name, c.nik, c.phone, c.email, " +
                     "r.number, r.type, r.bed, r.price, " +
                     "b.checkin_date, b.checkout_date, b.base_room_price, " +
                     "p.payment_date, p.payment_method " +
                     "FROM bookings b " +
                     "JOIN customers c ON b.customer_id = c.id " +
                     "JOIN rooms r ON b.room_id = r.id " +
                     "LEFT JOIN payments p ON b.id = p.booking_id " + 
                     "WHERE r.number = ? " +
                     "ORDER BY b.id DESC LIMIT 1";

        pat = conn.prepareStatement(sql);
        pat.setString(1, roomNumber);
        rs = pat.executeQuery();

        if (rs.next()) {
            // Ambil data
            String customerName = rs.getString("name");
            String nik = rs.getString("nik");
            String phone = rs.getString("phone");
            String email = rs.getString("email");

            String roomType = rs.getString("type");
            String bed = rs.getString("bed");
            int pricePerNight = rs.getInt("price");

            String checkin = rs.getString("checkin_date");
            String checkout = rs.getString("checkout_date");
            double totalPrice = rs.getDouble("base_room_price");
            String payment = rs.getString("payment_method");
            String formattedPricePerNight = String.format("Rp %,d,-", (long)pricePerNight).replace(",", ".");
            String formattedTotalPrice = String.format("Rp %,d,-", (long)totalPrice).replace(",", ".");
            // waktu saat ini
            String printDate = new SimpleDateFormat("dd MMMM yyyy | hh:mm:ss a").format(new Date());

            // Mulai pembuatan PDF
            Document document = new Document();
            PdfWriter.getInstance(document, new FileOutputStream(tempFile));
            document.open();

            // HEADER Hotel
            Paragraph hotelTitle = new Paragraph("PULU-PULU HOTEL", new Font(Font.FontFamily.TIMES_ROMAN, 16, Font.BOLD));
            hotelTitle.setAlignment(Element.ALIGN_CENTER);
            document.add(hotelTitle);

            Paragraph hotelAddress = new Paragraph(
                "Ababeka Education Park\nJl. Ki Hajar Dewantara, Kota Jababeka,\nCikarang Baru, Bekasi 17550, Indonesia\n\n",
                new Font(Font.FontFamily.TIMES_ROMAN, 10));
            hotelAddress.setAlignment(Element.ALIGN_CENTER);
            document.add(hotelAddress);

            // Tanggal Cetak di kanan atas
            Paragraph dateParagraph = new Paragraph(printDate,
                new Font(Font.FontFamily.TIMES_ROMAN, 10, Font.ITALIC));
            dateParagraph.setAlignment(Element.ALIGN_RIGHT);
            document.add(dateParagraph);

            // Paragraf pembuka formal
            Paragraph intro = new Paragraph(
                "Dear " + customerName + ",\n\n" +
                "Thank you for staying with us. We are pleased to provide you with the official bill for your recent stay at PULU-PULU HOTEL. Please find below your billing details:\n\n",
                new Font(Font.FontFamily.TIMES_ROMAN, 12)
            );
            intro.setAlignment(Element.ALIGN_JUSTIFIED);
            document.add(intro);

            // Informasi Tamu
            Paragraph guestInfo = new Paragraph("Guest Information", new Font(Font.FontFamily.TIMES_ROMAN, 12, Font.BOLD));
            guestInfo.setSpacingBefore(10);
            document.add(guestInfo);

            document.add(new Paragraph("Full Name     : " + customerName));
            document.add(new Paragraph("NIK           : " + nik));
            document.add(new Paragraph("Phone Number  : " + phone));
            document.add(new Paragraph("Email Address : " + email + "\n"));

            // Informasi Kamar
            // Buat font bold
            Font boldFont = new Font(Font.FontFamily.TIMES_ROMAN, 12, Font.BOLD);

            // Judul Section
            Paragraph roomInfo = new Paragraph("Room Details", boldFont);
            roomInfo.setSpacingBefore(10);
            roomInfo.setSpacingAfter(5);
            document.add(roomInfo);

            // Detail kamar
            document.add(new Paragraph("Room Number     : " + roomNumber));
            document.add(new Paragraph("Room Type       : " + roomType));
            document.add(new Paragraph("Bed Type        : " + bed));
            document.add(new Paragraph("Price/Night     : Rp " + pricePerNight + "\n"));
            

            document.add(new Paragraph("Price/Night     : " + formattedPricePerNight + "\n"));
            document.add(new Paragraph("Check-in Date   : " + checkin));
            document.add(new Paragraph("Check-out Date  : " + checkout));
            document.add(new Paragraph("Total Charges   : " + formattedTotalPrice));
       
            Font paidFont = new Font(Font.FontFamily.HELVETICA, 14, Font.BOLD, new BaseColor(0, 100, 0));
            Paragraph paidText = new Paragraph("PAID", paidFont);
            paidText.setSpacingBefore(10);
            document.add(paidText);


            // Paragraf penutup formal
            Paragraph closing = new Paragraph(
                "\nWe sincerely hope you had a pleasant stay with us. Should you have any further inquiries, please do not hesitate to contact our front desk. We look forward to welcoming you again soon.\n\n",
                new Font(Font.FontFamily.TIMES_ROMAN, 12));
            closing.setAlignment(Element.ALIGN_JUSTIFIED);
            document.add(closing);

            // Best Regards
            Paragraph regards = new Paragraph("Best regards,\n\nP2H\nOwner",
                    new Font(Font.FontFamily.TIMES_ROMAN, 12, Font.BOLD));
            document.add(regards);

            document.close();

            // Tampilkan file PDF otomatis
            if (Desktop.isDesktopSupported()) {
                Desktop.getDesktop().open(tempFile);
            } else {
                JOptionPane.showMessageDialog(this, "PDF saved but cannot open automatically.");
            }

        } else {
            JOptionPane.showMessageDialog(this, "No booking data found for this room.");
        }

    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "Failed to generate PDF: " + e.getMessage());
    }
}

    

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Checkout.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Checkout.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Checkout.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Checkout.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Checkout().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Back;
    private javax.swing.JButton Checkout;
    private javax.swing.JButton Search;
    private javax.swing.JButton clearForm;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField txtBed;
    private javax.swing.JTextField txtCheckin;
    private javax.swing.JTextField txtCheckout;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtNIK;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtPaymentMethod;
    private javax.swing.JTextField txtPhone;
    private javax.swing.JTextField txtPrice;
    private javax.swing.JTextField txtRoomNumber;
    private javax.swing.JTextField txtRoomType;
    private javax.swing.JTextField txtTotalPrice;
    // End of variables declaration//GEN-END:variables
}
