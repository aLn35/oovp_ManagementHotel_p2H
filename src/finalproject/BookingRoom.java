/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package finalproject;

import java.sql.*;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.PreparedStatement;
import java.sql.Statement;
import java.sql.SQLException;
import java.text.ParseException;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.List;
import java.util.ArrayList;
import java.text.SimpleDateFormat;
import finalproject.ManageRoom;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.util.Set;
import java.util.HashSet;
import java.text.NumberFormat;
import java.util.Locale;
import java.text.DecimalFormat;
import java.text.DecimalFormatSymbols;






/**
 *
 * @author Anjelin Ligiana Nainggolan
 */

public class BookingRoom extends javax.swing.JFrame {
    Connection conn = null;
    ResultSet rs = null;
    PreparedStatement pat = null;
    Statement st = null;
    Boolean exists =false ;
    
    /**
     * Creates new form BookingRoom
     */
    public BookingRoom() {
        initComponents();
        connect();
        setupListeners();
        loadAvailableRooms();
        
        

        
    roomNumberComboBox.addActionListener(new ActionListener() {
    @Override
    public void actionPerformed(ActionEvent e) {
        String selectedRoom = (String) roomNumberComboBox.getSelectedItem();
        if (selectedRoom != null) {
            loadRoomPrice(selectedRoom);
        } else {
            RoomPrice.setText("");
        }
    }
});


        
    btnsave.addActionListener(new java.awt.event.ActionListener() {
    public void actionPerformed(java.awt.event.ActionEvent evt) {
        jButton2ActionPerformed(evt);
    }
    });    
    
    setLocationRelativeTo(null);  // Biar jendela tampil di tengah layar
    setVisible(true);             // WAJIB agar tampil saat constructor dipanggil langsung
    }
    
    private void connect(){
        try {
            Class.forName("com.mysql.jdbc.Driver");
            String url = "jdbc:mysql://localhost:3306/p2h_oovp";
            String username = "root";
            String password = "";
            conn = DriverManager.getConnection(url, username, password);
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
            System.exit(0);
        }
    
    }
    
    private double pricePerNight = 0.0;
    private double baseRoomPrice = 0.0; 
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFrame1 = new javax.swing.JFrame();
        jFrame2 = new javax.swing.JFrame();
        textTitle = new javax.swing.JLabel();
        TextName = new javax.swing.JLabel();
        TextPhone = new javax.swing.JLabel();
        TextEmail = new javax.swing.JLabel();
        TextNIK = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        roomNumberComboBox = new javax.swing.JComboBox<>();
        txtname = new javax.swing.JTextField();
        txtnik = new javax.swing.JTextField();
        txtphone = new javax.swing.JTextField();
        txtemail = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        btnsave = new javax.swing.JButton();
        clearform = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        label1 = new javax.swing.JLabel();
        roomTypeComboBox1 = new javax.swing.JComboBox<>();
        RoomPrice = new javax.swing.JTextField();
        jDateChooser2 = new com.toedter.calendar.JDateChooser();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jLabel15 = new javax.swing.JLabel();
        roomBedComboBox = new javax.swing.JComboBox<>();
        jLabel16 = new javax.swing.JLabel();
        back = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        ComboBoxPay = new javax.swing.JComboBox<>();
        jLabel13 = new javax.swing.JLabel();
        Next = new javax.swing.JButton();
        Preveous = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 204));
        setLocation(new java.awt.Point(50, 118));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        textTitle.setFont(new java.awt.Font("Segoe UI Black", 1, 18)); // NOI18N
        textTitle.setText("Customer Data");
        getContentPane().add(textTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 140, 141, -1));

        TextName.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        TextName.setText("Name:");
        getContentPane().add(TextName, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 180, 50, 20));

        TextPhone.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        TextPhone.setText("Phone Number:");
        getContentPane().add(TextPhone, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 300, 110, 20));

        TextEmail.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        TextEmail.setText("Email:");
        getContentPane().add(TextEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 360, 50, 20));

        TextNIK.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        TextNIK.setText("NIK:");
        getContentPane().add(TextNIK, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 240, 50, 20));

        jLabel6.setFont(new java.awt.Font("Segoe UI Black", 1, 18)); // NOI18N
        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/finalproject/p2h_attribute/CheckIn.png"))); // NOI18N
        jLabel6.setText("CHECK IN HOTEL");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 40, 250, -1));

        roomNumberComboBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                roomNumberComboBoxItemStateChanged(evt);
            }
        });
        roomNumberComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                roomNumberComboBoxActionPerformed(evt);
            }
        });
        getContentPane().add(roomNumberComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(890, 310, 150, 30));

        txtname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtnameActionPerformed(evt);
            }
        });
        getContentPane().add(txtname, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 200, 230, 30));

        txtnik.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtnikActionPerformed(evt);
            }
        });
        getContentPane().add(txtnik, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 260, 230, 30));

        txtphone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtphoneActionPerformed(evt);
            }
        });
        getContentPane().add(txtphone, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 320, 230, 30));

        txtemail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtemailActionPerformed(evt);
            }
        });
        getContentPane().add(txtemail, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 380, 230, 30));

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel9.setText("Check-In");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 180, 75, -1));

        jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel11.setText("Check-Out:");
        getContentPane().add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 180, -1, 20));

        btnsave.setBackground(new java.awt.Color(102, 204, 255));
        btnsave.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnsave.setForeground(new java.awt.Color(0, 0, 102));
        btnsave.setText("Book Now");
        btnsave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsaveActionPerformed(evt);
            }
        });
        getContentPane().add(btnsave, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 510, 130, 30));

        clearform.setBackground(new java.awt.Color(255, 255, 255));
        clearform.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        clearform.setForeground(new java.awt.Color(255, 153, 51));
        clearform.setText("Clear");
        clearform.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearformActionPerformed(evt);
            }
        });
        getContentPane().add(clearform, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 510, 100, 30));

        jLabel12.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel12.setText("Payment :");
        getContentPane().add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 330, -1, 50));

        label1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        label1.setText("Room Number: ");
        getContentPane().add(label1, new org.netbeans.lib.awtextra.AbsoluteConstraints(890, 290, -1, -1));

        roomTypeComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Standard", "Deluxe", "Suite" }));
        roomTypeComboBox1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                roomTypeComboBox1ItemStateChanged(evt);
            }
        });
        roomTypeComboBox1.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
                roomTypeComboBox1CaretPositionChanged(evt);
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
            }
        });
        roomTypeComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                roomTypeComboBox1ActionPerformed(evt);
            }
        });
        getContentPane().add(roomTypeComboBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 310, 150, 30));

        RoomPrice.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        RoomPrice.setForeground(new java.awt.Color(255, 0, 0));
        RoomPrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RoomPriceActionPerformed(evt);
            }
        });
        getContentPane().add(RoomPrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 370, 250, 40));
        getContentPane().add(jDateChooser2, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 200, 230, 30));
        getContentPane().add(jDateChooser1, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 200, 230, 30));

        jLabel15.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel15.setText("Room Type : ");
        getContentPane().add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 290, -1, -1));

        roomBedComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Single", "Double" }));
        roomBedComboBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                roomBedComboBoxItemStateChanged(evt);
            }
        });
        roomBedComboBox.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
                roomBedComboBoxCaretPositionChanged(evt);
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
            }
        });
        roomBedComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                roomBedComboBoxActionPerformed(evt);
            }
        });
        getContentPane().add(roomBedComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 310, 150, 30));

        jLabel16.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel16.setText("Room Bed : ");
        getContentPane().add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 290, -1, -1));

        back.setBackground(new java.awt.Color(255, 204, 204));
        back.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        back.setForeground(new java.awt.Color(204, 0, 0));
        back.setText("Back to Dashboard");
        back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backActionPerformed(evt);
            }
        });
        getContentPane().add(back, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 510, 190, 30));

        jLabel7.setFont(new java.awt.Font("Segoe UI Black", 1, 18)); // NOI18N
        jLabel7.setText("Room Booking");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 140, 159, -1));

        ComboBoxPay.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        ComboBoxPay.setForeground(new java.awt.Color(51, 204, 0));
        ComboBoxPay.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tunai", "Debit", "E-Wallet", "Transfer Bank", "Pembayaran Perusahaan", "Unique Payment Card (UPC)", " ", " " }));
        getContentPane().add(ComboBoxPay, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 370, 230, 40));

        jLabel13.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel13.setText("TOTAL : ");
        getContentPane().add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 330, -1, 50));

        Next.setBackground(new java.awt.Color(204, 255, 204));
        Next.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        Next.setForeground(new java.awt.Color(0, 153, 51));
        Next.setText(">");
        Next.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NextActionPerformed(evt);
            }
        });
        getContentPane().add(Next, new org.netbeans.lib.awtextra.AbsoluteConstraints(990, 510, -1, 30));

        Preveous.setBackground(new java.awt.Color(204, 255, 204));
        Preveous.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        Preveous.setForeground(new java.awt.Color(0, 153, 51));
        Preveous.setText("<");
        Preveous.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PreveousActionPerformed(evt);
            }
        });
        getContentPane().add(Preveous, new org.netbeans.lib.awtextra.AbsoluteConstraints(940, 510, -1, 30));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 3, 13)); // NOI18N
        jLabel1.setText("@anjelin.ln");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 590, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {
    String name = txtname.getText().trim();
    String nik = txtnik.getText().trim();
    String phone = txtphone.getText().trim();
    String email = txtemail.getText().trim();

    if (name.isEmpty() || nik.isEmpty() || phone.isEmpty() || email.isEmpty()) {
        JOptionPane.showMessageDialog(this, "All fields are required");
        return;
    }

    // Validasi NIK (angka, 8–12 digit)
    if (!nik.matches("\\d{8,12}")) {
        JOptionPane.showMessageDialog(this, "NIK must be numeric and contain 8 to 12 digits.");
        txtnik.requestFocus();
        return;
    }

    // Validasi phone (angka, 10–12 digit)
    if (!phone.matches("\\d{10,12}")) {
        JOptionPane.showMessageDialog(this, "Phone must be numeric and contain 10 to 12 digits.");
        txtphone.requestFocus();
        return;
    }

    // Validasi email (min 3 huruf sebelum @gmail.com)
    if (!email.matches("^[a-zA-Z0-9._%+-]{3,}@gmail\\.com$")) {
        JOptionPane.showMessageDialog(this, "Email must be in the format of at least 3 characters followed by @gmail.com");
        txtemail.requestFocus();
        return;
    }

    if (jDateChooser1.getDate() == null) {
        JOptionPane.showMessageDialog(this, "Check-in date is required");
        jDateChooser1.requestFocus();
        return;
    }

    if (jDateChooser2.getDate() == null) {
        JOptionPane.showMessageDialog(this, "Check-out date is required");
        jDateChooser2.requestFocus();
        return;
    }

    if (roomNumberComboBox.getSelectedItem() == null) {
        JOptionPane.showMessageDialog(this, "Room must be selected");
        return;
    }

    try {
        // Cek apakah NIK sudah ada
        pat = conn.prepareStatement("SELECT * FROM customers WHERE nik = ?");
        pat.setString(1, nik);
        rs = pat.executeQuery();
        if (rs.next()) {
            JOptionPane.showMessageDialog(this, "NIK Already Exist");
            return;
        }

        // Simpan customer
        pat = conn.prepareStatement("INSERT INTO customers(name, phone, email, nik) VALUES (?, ?, ?, ?)");
        pat.setString(1, txtname.getText());
        pat.setString(2, txtphone.getText());
        pat.setString(3, txtemail.getText());
        pat.setString(4, txtnik.getText());
        pat.executeUpdate();

        // Ambil ID customer terakhir
        Statement st = conn.createStatement();
        rs = st.executeQuery("SELECT LAST_INSERT_ID()");
        int customerId = 0;
        if (rs.next()) {
            customerId = rs.getInt(1);
        }

        // Format tanggal
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        String checkin = sdf.format(jDateChooser1.getDate());
        String checkout = sdf.format(jDateChooser2.getDate());

        // Ambil ID dan harga kamar
        String roomNumber = (String) roomNumberComboBox.getSelectedItem();
        pat = conn.prepareStatement("SELECT id, price FROM rooms WHERE number = ?");
        pat.setString(1, roomNumber);
        rs = pat.executeQuery();

        int roomId = 0;
        double pricePerNight = 0.0;
        if (rs.next()) {
            roomId = rs.getInt("id");
            pricePerNight = rs.getDouble("price");
        } else {
            JOptionPane.showMessageDialog(this, "Room not found");
            return;
        }

        // Hitung harga total
        long diff = jDateChooser2.getDate().getTime() - jDateChooser1.getDate().getTime();
        long days = diff / (1000 * 60 * 60 * 24);
        if (days <= 0) days = 1;

        double baseRoomPrice = pricePerNight * days;

        // Insert booking
        pat = conn.prepareStatement("INSERT INTO bookings(customer_id, room_id, checkin_date, checkout_date, payment_status, base_room_price) VALUES (?, ?, ?, ?, ?, ?)");
        pat.setInt(1, customerId);
        pat.setInt(2, roomId);
        pat.setString(3, checkin);
        pat.setString(4, checkout);
        pat.setString(5, "Pending");
        pat.setDouble(6, baseRoomPrice);
        pat.executeUpdate();

        // Ambil ID booking terakhir
        rs = st.executeQuery("SELECT LAST_INSERT_ID()");
        int bookingId = 0;
        if (rs.next()) {
            bookingId = rs.getInt(1);
        }

        // Simpan pembayaran
        String paymentMethod = (String) ComboBoxPay.getSelectedItem();
        pat = conn.prepareStatement("INSERT INTO payments(booking_id, amount, payment_date, payment_method) VALUES (?, ?, ?, ?)");
        pat.setInt(1, bookingId);
        pat.setDouble(2, baseRoomPrice);
        pat.setString(3, checkin);
        pat.setString(4, paymentMethod);
        pat.executeUpdate();

        // Update status booking jadi 'paid'
        pat = conn.prepareStatement("UPDATE bookings SET payment_status = 'paid' WHERE id = ?");
        pat.setInt(1, bookingId);
        pat.executeUpdate();

        // Update status kamar
        pat = conn.prepareStatement("UPDATE rooms SET availability = 'booked' WHERE id = ?");
        pat.setInt(1, roomId);
        pat.executeUpdate();

        JOptionPane.showMessageDialog(this, "Customer and Booking Added Successfully");

    } catch (SQLException ex) {
        JOptionPane.showMessageDialog(this, "Database error: " + ex.getMessage());
        Logger.getLogger(ManageRoom.class.getName()).log(Level.SEVERE, null, ex);
    }
}


private void loadRoomPrice(String roomNumber) {
    try {
        String sql = "SELECT price FROM rooms WHERE number = ? AND availability = 'available'";
        pat = conn.prepareStatement(sql);
        pat.setString(1, roomNumber);
        rs = pat.executeQuery();
        if (rs.next()) {
            pricePerNight = rs.getDouble("price");
            RoomPrice.setText(String.valueOf(pricePerNight));
            updateTotalPrice();
        } else {
            pricePerNight = 0.0;
            RoomPrice.setText("Not Found");
        }
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(this, "Failed to load price: " + e.getMessage());
    }
}

private void updateTotalPrice() {
    Date checkInDate = jDateChooser1.getDate();
    Date checkOutDate = jDateChooser2.getDate();

    if (checkInDate != null && checkOutDate != null) {
        long diffMillis = checkOutDate.getTime() - checkInDate.getTime();
        long diffDays = diffMillis / (24 * 60 * 60 * 1000);
        if (diffDays <= 0) diffDays = 1;

        baseRoomPrice = pricePerNight * diffDays;

        DecimalFormatSymbols symbols = new DecimalFormatSymbols();
        symbols.setGroupingSeparator('.');
        symbols.setDecimalSeparator(',');
        DecimalFormat rupiahFormat = new DecimalFormat("#,##0", symbols);

        RoomPrice.setText("Rp. " + rupiahFormat.format(baseRoomPrice) + ",-");
    } else {
        RoomPrice.setText("");
    }
}
    
    
private List<Room> availableRooms = new ArrayList<>();

// Room class sederhana untuk simpan data kamar sementara
private class Room {
    String type;
    String bed;
    String number;
    double price;

    Room(String type, String bed, String number, double price) {
        this.type = type;
        this.bed = bed;
        this.number = number;
        this.price = price;
    }
}

private void loadAvailableRooms() {
    try {
        availableRooms.clear();
        roomTypeComboBox1.removeAllItems();
        roomBedComboBox.removeAllItems();
        roomNumberComboBox.removeAllItems();

        // Ambil semua kamar yang available
        String sql = "SELECT type, bed, number, price FROM rooms WHERE availability = 'available'";
        pat = conn.prepareStatement(sql);
        rs = pat.executeQuery();

        // Set untuk unik tipe dan bed
        Set<String> types = new HashSet<>();
        Set<String> beds = new HashSet<>();

        while (rs.next()) {
            String type = rs.getString("type");
            String bed = rs.getString("bed");
            String number = rs.getString("number");
            double price = rs.getDouble("price");

            availableRooms.add(new Room(type, bed, number, price));
            types.add(type);
            beds.add(bed);
        }

        // Isi combobox tipe dan bed
        for (String type : types) {
            roomTypeComboBox1.addItem(type);
        }
        for (String bed : beds) {
            roomBedComboBox.addItem(bed);
        }

        // Jika ada tipe dan bed, set default pilih index 0 agar combobox lain terfilter
        if (roomTypeComboBox1.getItemCount() > 0) {
            roomTypeComboBox1.setSelectedIndex(0);
        }
        if (roomBedComboBox.getItemCount() > 0) {
            roomBedComboBox.setSelectedIndex(0);
        }

        // Update nomor kamar berdasar filter awal
        updateRoomNumbers();
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(this, "Gagal load kamar: " + e.getMessage());
    }
}

// Update nomor kamar berdasar filter tipe dan bed terpilih
private void updateRoomNumbers() {
    String selectedType = (String) roomTypeComboBox1.getSelectedItem();
    String selectedBed = (String) roomBedComboBox.getSelectedItem();

    roomNumberComboBox.removeAllItems();

    for (Room r : availableRooms) {
        if (r.type.equals(selectedType) && r.bed.equals(selectedBed)) {
            roomNumberComboBox.addItem(r.number);
        }
    }

    // Set default price sesuai nomor kamar pertama jika ada
    if (roomNumberComboBox.getItemCount() > 0) {
        roomNumberComboBox.setSelectedIndex(0);
    } else {
        RoomPrice.setText("");
    }
    
}


// Listener untuk filter cascade
private void setupListeners() {
    roomTypeComboBox1.addActionListener(new ActionListener() {
        @Override
        public void actionPerformed(ActionEvent e) {
            updateRoomNumbers();
        }
    });

    roomBedComboBox.addActionListener(new ActionListener() {
        @Override
        public void actionPerformed(ActionEvent e) {
            updateRoomNumbers();
        }
    });

    roomNumberComboBox.addActionListener(new ActionListener() {
        @Override
        public void actionPerformed(ActionEvent e) {
            String selectedRoom = (String) roomNumberComboBox.getSelectedItem();
            if (selectedRoom != null) {
                loadRoomPrice(selectedRoom);
            } else {
                RoomPrice.setText("");
            }
        }
    });   
    clearform.addActionListener(new ActionListener() {
        @Override
        public void actionPerformed(ActionEvent e) {
            clearForm();
        }
    });
    jDateChooser1.getDateEditor().addPropertyChangeListener(evt -> {
    if ("date".equals(evt.getPropertyName())) {
        updateTotalPrice();
    }
});
jDateChooser2.getDateEditor().addPropertyChangeListener(evt -> {
    if ("date".equals(evt.getPropertyName())) {
        updateTotalPrice();
    }
});

    
    
}


    


private void clearForm() {
    txtname.setText("");
    txtnik.setText("");
    txtphone.setText("");
    txtemail.setText("");
    jDateChooser1.setDate(null);
    jDateChooser2.setDate(null);

    // Reset combobox ke item pertama
    if (roomTypeComboBox1.getItemCount() > 0) {
        roomTypeComboBox1.setSelectedIndex(0);
    }
    if (roomBedComboBox.getItemCount() > 0) {
        roomBedComboBox.setSelectedIndex(0);
    }

    // Kosongkan room price
    RoomPrice.setText("");

    // Update daftar nomor kamar dan harga
    updateRoomNumbers();
}
// Fungsi untuk reset semua form input dan combobox ke default

    
 
    
    private void roomNumberComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_roomNumberComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_roomNumberComboBoxActionPerformed

    private void txtnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtnameActionPerformed

    private void txtnikActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtnikActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtnikActionPerformed

    private void txtphoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtphoneActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtphoneActionPerformed

    private void txtemailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtemailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtemailActionPerformed

    private void btnsaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsaveActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnsaveActionPerformed

    private void clearformActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearformActionPerformed
        clearForm(); // TODO add your handling code here:
    }//GEN-LAST:event_clearformActionPerformed

    private void roomTypeComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_roomTypeComboBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_roomTypeComboBox1ActionPerformed

    private void RoomPriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RoomPriceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_RoomPriceActionPerformed

    private void roomTypeComboBox1CaretPositionChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_roomTypeComboBox1CaretPositionChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_roomTypeComboBox1CaretPositionChanged

    private void roomTypeComboBox1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_roomTypeComboBox1ItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_roomTypeComboBox1ItemStateChanged

    private void roomNumberComboBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_roomNumberComboBoxItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_roomNumberComboBoxItemStateChanged

    private void roomBedComboBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_roomBedComboBoxItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_roomBedComboBoxItemStateChanged

    private void roomBedComboBoxCaretPositionChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_roomBedComboBoxCaretPositionChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_roomBedComboBoxCaretPositionChanged

    private void roomBedComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_roomBedComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_roomBedComboBoxActionPerformed

    private void backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backActionPerformed
        new Dashboard().setVisible(true);       // TODO add your handling code here:
    }//GEN-LAST:event_backActionPerformed

    private void NextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NextActionPerformed
        new Checkout().setVisible(true);    
    // TODO add your handling code here:
    }//GEN-LAST:event_NextActionPerformed

    private void PreveousActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PreveousActionPerformed
       new ManageRoom().setVisible(true); 
    }//GEN-LAST:event_PreveousActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BookingRoom.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BookingRoom.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BookingRoom.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BookingRoom.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BookingRoom().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> ComboBoxPay;
    private javax.swing.JButton Next;
    private javax.swing.JButton Preveous;
    private javax.swing.JTextField RoomPrice;
    private javax.swing.JLabel TextEmail;
    private javax.swing.JLabel TextNIK;
    private javax.swing.JLabel TextName;
    private javax.swing.JLabel TextPhone;
    private javax.swing.JButton back;
    private javax.swing.JButton btnsave;
    private javax.swing.JButton clearform;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private com.toedter.calendar.JDateChooser jDateChooser2;
    private javax.swing.JFrame jFrame1;
    private javax.swing.JFrame jFrame2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel label1;
    private javax.swing.JComboBox<String> roomBedComboBox;
    private javax.swing.JComboBox<String> roomNumberComboBox;
    private javax.swing.JComboBox<String> roomTypeComboBox1;
    private javax.swing.JLabel textTitle;
    private javax.swing.JTextField txtemail;
    private javax.swing.JTextField txtname;
    private javax.swing.JTextField txtnik;
    private javax.swing.JTextField txtphone;
    // End of variables declaration//GEN-END:variables
}
